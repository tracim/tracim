_update_status: &_update_status
  resource: pull-request
  get_params:
    skip_download: true

_update_status_params: &_update_status_params
  path: pull-request

_update_pull_request_status: &_update_pull_request_status
  on_success:
    put: pull-request-success
    <<: *_update_status
    params:
      <<: *_update_status_params
      status: success
    get_params:
      skip_download: true
  on_failure:
    put: pull-request-failure
    <<: *_update_status
    params:
      <<: *_update_status_params
      status: failure
  on_error:
    put: pull-request-error
    <<: *_update_status
    params:
      <<: *_update_status_params
      status: error
  on_abort:
    put: pull-request-abort
    <<: *_update_status
    params:
      <<: *_update_status_params
      status: error

resource_types:
- name: pull-request
  type: registry-image
  source:
    repository: aoldershaw/github-pr-resource

resources:
- name: pull-request
  type: pull-request
  check_every: 30s
  # TODO - S.G. - 2021/08/02
  # The token is not used as one webhook would have to be created PER PR in github.
  # This could be automated, but is not so easy.
  webhook_token: ((github-webhook-token))
  source:
    repository: tracim/tracim
    access_token: ((github-access-token))
    number: ((number))

jobs:
- name: reconfigure-self
  plan:
  - get: pull-request
    trigger: true
  - set_pipeline: self
    file: pull-request/concourse/pipelines/pull-request.yml
    vars:
      github-webhook-token: ((github-webhook-token))
      github-access-token: ((github-access-token))
- name: backend-test
  plan:
  - get: pull-request
    passed: [reconfigure-self]
    trigger: true
  - put: pull-request-status
    <<: *_update_status
    params:
      <<: *_update_status_params
      status: pending
  - task: backend-lint
    file: pull-request/concourse/tasks/test.yml
    input_mapping:
      tracim: pull-request
    vars:
      python_version: 3.6
      path: concourse/scripts/backend-lint
  - across:
    - var: python_version
      values: ["3.5", "3.6", "3.7"]
      max_in_flight: all
    task: backend-quick-tests_((.:python_version))
    privileged: true
    file: pull-request/concourse/tasks/test.yml
    input_mapping:
      tracim: pull-request
    vars:
      python_version: ((.:python_version))
      path: concourse/scripts/backend-quick-tests
  <<: *_update_pull_request_status

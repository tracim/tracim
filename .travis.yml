---
env:
  global:
    - DEFAULT_SQLITE_SQLALCHEMY__URL=sqlite:////tmp/tracim.sqlite
    - DEFAULT_MYSQL_SQLALCHEMY__URL=mysql+pymysql://user:secret@127.0.0.1:3306/tracim_test
    - DEFAULT_POSTGRES_SQLALCHEMY__URL=postgresql://user:secret@127.0.0.1:5432/tracim_test?client_encoding=utf8
    - DB=sqlite
    - COVERAGE=0
    - PSERVE_LOG=/tmp/pserve_log.log
    - TRACIM_SQLALCHEMY__URL=$DEFAULT_SQLITE_SQLALCHEMY__URL
    - TRACIM_DEPOT_STORAGE_NAME=test
    - TRACIM_DEPOT_STORAGE_DIR=/tmp/test/depot
    - TRACIM_PREVIEW_CACHE_DIR=/tmp/test/preview_cache
    - TRACIM_COLOR__CONFIG_FILE_PATH=$TRAVIS_BUILD_DIR/backend/color-test.json
    - TRACIM_SESSION__DATA_DIR=/tmp/test/sessions/data
    - TRACIM_SESSION__LOCK_DIR=/tmp/test/sessions/lock
    - TRACIM_COLLABORATIVE_DOCUMENT_EDITION__FILE_TEMPLATE_DIR=$TRAVIS_BUILD_DIR/backend/tracim_backend/templates/open_documents
    - TRACIM_CALDAV__RADICALE__STORAGE__FILESYSTEM_FOLDER=/tmp/test/radicale_storage
    - TEST_CONFIG_FILE_PATH=$TRAVIS_BUILD_DIR/backend/tests_configs.ini
    - TEST_PUSHPIN_FILE_PATH=$TRAVIS_BUILD_DIR/backend/pushpin_test.conf
    - TEST_MIGRATION_SCRIPT_LOCATION=$TRAVIS_BUILD_DIR/backend/tracim_backend/migration
    - TRACIM_SEARCH__ELASTICSEARCH__INDEX_ALIAS=tracim_content_travis_test
language: python
dist: bionic
python: "3.6"

_install_backend: &_install_backend
  addons:
    apt:
      packages:
        - libreoffice
        - imagemagick
        - libmagickwand-dev
        - ghostscript
        - libfile-mimeinfo-perl
        - poppler-utils
        - qpdf
        - ffmpeg
        - ufraw-batch
        - libldap2-dev
        - libsasl2-dev
        - docker-ce
        - libimage-exiftool-perl
        - pushpin
  services:
    - redis-server
  before_install:
    # INFO - G.M - 2019-05-02 - some useful debug information
    - echo "$TRACIM_COLOR__CONFIG_FILE_PATH"
    - cat "$TRACIM_COLOR__CONFIG_FILE_PATH"
    - echo "$TRACIM_SQLALCHEMY__URL"
    - mkdir -p $TRACIM_DEPOT_STORAGE_DIR
    - mkdir -p $TRACIM_PREVIEW_CACHE_DIR
    - mkdir -p $TRACIM_SESSION__DATA_DIR
    - mkdir -p $TRACIM_SESSION__LOCK_DIR
    - mkdir -p $TRACIM_CALDAV__RADICALE__STORAGE__FILESYSTEM_FOLDER
    - ls -R /tmp/test
  install:
    - cd $TRAVIS_BUILD_DIR/backend
    - pip install --upgrade pip setuptools wheel

    - pip install -r "requirements.txt"
    # postgresql
    - |
      if [ "${DB}" == "postgres" ]; then
        docker pull postgres:9.3
        docker run -d -p 5432:5432 --name postgres -e POSTGRES_DB=tracim_test -e POSTGRES_USER=user -e POSTGRES_PASSWORD=secret postgres:9.3
        pip install -e ".[postgresql,testing]"
      fi
    # mysql 8+
    - |
      if [ "${DB}" == "mysql" ]; then
        docker pull mysql:8.0
        docker run -d -p 3306:3306 --name mysqld -e MYSQL_DATABASE=tracim_test -e MYSQL_USER=user -e MYSQL_PASSWORD=secret -e MYSQL_RANDOM_ROOT_PASSWORD=true mysql:8.0
        pip install -e ".[mysql,testing]"
      fi
    # mariadb 10.3
    - |
      if [ "${DB}" == "mariadb" ]; then
        docker pull mariadb/server:10.3
        docker run -d -p 3306:3306 --name mariadbd -e MARIADB_DATABASE=tracim_test -e MARIADB_USER=user -e MARIADB_PASSWORD=secret -e MARIADB_RANDOM_ROOT_PASSWORD=true mariadb/server:10.3
        pip install -e ".[mysql,testing]"
      fi
    # sqlite
    - |
      if [ "${DB}" == "sqlite" ]; then
        pip install -e ".[testing]"
      fi
    - cd $TRAVIS_BUILD_DIR
  before_script:
    - docker pull mailhog/mailhog
    - docker run -d -p 1025:1025 -p 8025:8025 mailhog/mailhog
    - docker pullÂ rroemhild/test-openldap
    - docker run -d -p 3890:389 rroemhild/test-openldap
    - docker pull elasticsearch:7.0.0
    - docker run -d -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" -e "cluster.routing.allocation.disk.threshold_enabled=false" elasticsearch:7.0.0
    # using old version of pytest-cov to avoid
    # version conflict with python-coveralls
    # see https://github.com/z4r/python-coveralls/issues/66
    - sh -c "if [ '$COVERAGE' = '1' ]; then pip install \"pytest-cov<2.6\" \"python-coveralls\"; fi"


_install_full_tracim: &_install_full_tracim
  <<: *_install_backend
  before_script:
    # setup backend for running
    - cd $TRAVIS_BUILD_DIR/backend
    - cp ../color.json.sample ../color.json
    - tracimcli db init -c $BACKEND_TEST_CONFIG_FILE -d
    - alembic -c $BACKEND_TEST_CONFIG_FILE stamp head
    # install frontend
    - cd $TRAVIS_BUILD_DIR
    - ./install_frontend_dependencies.sh
    - ./build_full_frontend.sh
    - IGNORE_APT_INSTALL=true ./setup_functionnal_tests.sh

_backend_quick_test: &_backend_quick_test
  <<: *_install_backend
  # INFO - G.M - 2019-04-25 - override docker usage by overriding
  addons:
    apt:
      packages:
        - libimage-exiftool-perl
  services:
  before_script:
  script:
    - pytest backend --ignore "backend/tracim_backend/tests/functional" --ignore "backend/tracim_backend/tests/commands"

_backend_test: &_backend_test
  <<: *_install_backend
  script:
    - sh -c "if [ '$COVERAGE' = 1 ]; then pytest --cov backend; else pytest backend; fi"


jobs:
  include:
    # TODO BS 2018-10-12: Re-enable this test when setup.py list deps as strict
    #  - stage: quick-tests
    #    name: Check requirement.txt
    #    python: "3.5"
    #    addons:
    #    services:
    #    before_install:
    #      - cd backend
    #    install:
    #      - pip install --upgrade pip setuptools wheel
    #      - pip install pip-tools
    #    before_script:
    #      - mv requirements.txt requirements_from_source.txt
    #    script:
    #      - pip-compile
    #      - diff -u requirements.txt requirements_from_source.txt
    #    after_success: true

    # INFO - G.M - 2019-04-25 - Stage: Static tests ###
    - stage: static-tests
      name: black
      install:
        - pip install -r $TRAVIS_BUILD_DIR/backend/requirements-static-tests.txt
      script:
        - black --version
        - black -l 100 --exclude '/(\..*)/' --diff --check $TRAVIS_BUILD_DIR/backend/tracim_backend
    - stage: static-tests
      name: isort
      install:
        - pip install -r $TRAVIS_BUILD_DIR/backend/requirements-static-tests.txt
      script:
        - echo -n "isort " & isort --version-number
        - isort -df -c $TRAVIS_BUILD_DIR/backend/tracim_backend/**/*.py
    - stage: static-tests
      name: flake8
      install:
        - pip install -r $TRAVIS_BUILD_DIR/backend/requirements-static-tests.txt
      script:
        - flake8 --version
        - flake8 $TRAVIS_BUILD_DIR/backend/tracim_backend

    # INFO - G.M - 2019-04-25 - Stage: Quick Tests ###
    - stage: quick-tests
      name: "Python: 3.6"
      <<: *_backend_quick_test
      python: "3.6"
      if: commit_message !~ /(\[skip ci pytest\])/
    - stage: quick-tests
      name: "Python: 3.5"
      <<: *_backend_quick_test
      python: "3.5"
      if: commit_message !~ /(\[skip ci pytest\])/
    - stage: quick-tests
      name: "Python: 3.7"
      dist: xenial
      <<: *_backend_quick_test
      python: "3.7"
      if: commit_message !~ /(\[skip ci pytest\])/

    # INFO - G.M - 2019-04-25 - Stage: Backend ###
    - stage: backend
      <<: *_backend_test
      env:
        - DB=sqlite
        - COVERAGE=1
        - TRACIM_SQLALCHEMY__URL=$DEFAULT_SQLITE_SQLALCHEMY__URL
      after_success:
        - cd $TRAVIS_BUILD_DIR
        - cat .coverage
        - coveralls
      if: commit_message !~ /(\[skip ci pytest\])/
    - stage: backend
      <<: *_backend_test
      env:
        - DB=postgres
        - TRACIM_SQLALCHEMY__URL=$DEFAULT_POSTGRES_SQLALCHEMY__URL
      if: commit_message !~ /(\[skip ci pytest\])/
    - stage: backend
      <<: *_backend_test
      env:
        - DB=mysql
        - TRACIM_SQLALCHEMY__URL=$DEFAULT_MYSQL_SQLALCHEMY__URL
      if: commit_message !~ /(\[skip ci pytest\])/
    - stage: backend
      <<: *_backend_test
      env:
        - DB=mariadb
        - TRACIM_SQLALCHEMY__URL=$DEFAULT_MYSQL_SQLALCHEMY__URL
      if: commit_message !~ /(\[skip ci pytest\])/
    # INFO - C.H - 2019-07-03 - Stage: Frontend unit  tests ###
    - stage: frontend
      name: Frontend unit tests
      install:
        - ./install_frontend_dependencies.sh
        - ./build_full_frontend.sh
      env:
        - TRAVIS_NODE_VERSION="10"
      script:
        - cd $TRAVIS_BUILD_DIR/frontend_lib
        - yarn run test
        - cd $TRAVIS_BUILD_DIR/frontend
        - yarn run test
        - cd $TRAVIS_BUILD_DIR/frontend_app_html-document
        - yarn run test
        - cd $TRAVIS_BUILD_DIR/frontend_app_file
        - yarn run test
        - cd $TRAVIS_BUILD_DIR/frontend_app_thread
        - yarn run test
        - cd $TRAVIS_BUILD_DIR/frontend_app_folder_advanced
        - yarn run test
        - cd $TRAVIS_BUILD_DIR/frontend_app_workspace
        - yarn run test
        - cd $TRAVIS_BUILD_DIR/frontend_app_workspace_advanced
        - yarn run test
        - cd $TRAVIS_BUILD_DIR/frontend_app_agenda
        - yarn run test
        - cd $TRAVIS_BUILD_DIR/frontend_app_admin_workspace_user
        - yarn run test
        - cd $TRAVIS_BUILD_DIR/frontend_app_gallery
        - yarn run test
        - cd $TRAVIS_BUILD_DIR
      if: commit_message !~ /(\[skip ci unit_test\])/
    # INFO - G.M - 2019-04-25 - Stage: Functional Test ###
    - stage: frontend
      name: Functional tests using Cypress
      <<: *_install_full_tracim
      env:
        - DB=sqlite;
        - TRACIM_SQLALCHEMY__URL=sqlite:////tmp/tracim_cypress.sqlite
        - BACKEND_TEST_CONFIG_FILE=cypress_test.ini
        - TRAVIS_NODE_VERSION="10"
      script:
        - cd $TRAVIS_BUILD_DIR/backend
        - nohup pserve $BACKEND_TEST_CONFIG_FILE > $PSERVE_LOG 2>&1 &
        - cd $TRAVIS_BUILD_DIR/functionnal_tests
        - nohup tracimcli caldav start&
        - yarn run travis-cypress-run
        - cd $TRAVIS_BUILD_DIR
      if: commit_message !~ /(\[skip ci cypress\])/

stages:
  - static-tests
  - quick-tests
  - backend
  - frontend
  - functional
